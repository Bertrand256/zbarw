diff -u -r wine-1.4/include/control.idl wine-1.4-zbar/include/control.idl
--- wine-1.4/include/control.idl	2012-03-07 17:11:48.000000000 +0100
+++ wine-1.4-zbar/include/control.idl	2012-08-15 17:11:14.000000000 +0200
@@ -1,6 +1,7 @@
 /*
  * Copyright (C) 2002 Lionel Ulmer
  * Copyright (C) 2004 Alexandre Julliard
+ * Modified in 2012 by Klaus Triendl <klaus@triendl.eu>
  *
  * This library is free software; you can redistribute it and/or
  * modify it under the terms of the GNU Lesser General Public
@@ -52,8 +53,8 @@
         HRESULT GetState( [in] LONG msTimeout, [out] OAFilterState *pfs );
         HRESULT RenderFile( [in] BSTR strFilename );
         HRESULT AddSourceFilter( [in] BSTR strFilename, [out] IDispatch **ppUnk );
-        [propget] HRESULT FilterCollection( [out] IDispatch **ppUnk );
-        [propget] HRESULT RegFilterCollection( [out] IDispatch **ppUnk );
+        [propget] HRESULT FilterCollection( [out, retval] IDispatch **ppUnk );
+        [propget] HRESULT RegFilterCollection( [out, retval] IDispatch **ppUnk );
         HRESULT StopWhenReady();
     }
 
@@ -69,9 +70,9 @@
     interface IBasicAudio : IDispatch
     {
         [propput] HRESULT Volume( [in] LONG lVolume );
-        [propget] HRESULT Volume( [out] LONG *plVolume );
+        [propget] HRESULT Volume( [out, retval] LONG *plVolume );
         [propput] HRESULT Balance( [in] LONG lBalance );
-        [propget] HRESULT Balance( [out] LONG *plBalance );
+        [propget] HRESULT Balance( [out, retval] LONG *plBalance );
     }
 
 
@@ -86,34 +87,34 @@
     interface IVideoWindow : IDispatch
     {
         [propput] HRESULT Caption( [in] BSTR strCaption );
-        [propget] HRESULT Caption( [out] BSTR *strCaption );
+        [propget] HRESULT Caption( [out, retval] BSTR *strCaption );
         [propput] HRESULT WindowStyle( [in] LONG WindowStyle );
-        [propget] HRESULT WindowStyle( [out] LONG *WindowStyle );
+        [propget] HRESULT WindowStyle( [out, retval] LONG *WindowStyle );
         [propput] HRESULT WindowStyleEx( [in] LONG WindowStyleEx );
-        [propget] HRESULT WindowStyleEx( [out] LONG *WindowStyleEx );
+        [propget] HRESULT WindowStyleEx( [out, retval] LONG *WindowStyleEx );
         [propput] HRESULT AutoShow( [in] LONG AutoShow );
-        [propget] HRESULT AutoShow( [out] LONG *AutoShow );
+        [propget] HRESULT AutoShow( [out, retval] LONG *AutoShow );
         [propput] HRESULT WindowState( [in] LONG WindowState );
-        [propget] HRESULT WindowState( [out] LONG *WindowState );
+        [propget] HRESULT WindowState( [out, retval] LONG *WindowState );
         [propput] HRESULT BackgroundPalette( [in] LONG BackgroundPalette );
-        [propget] HRESULT BackgroundPalette( [out] LONG *pBackgroundPalette );
+        [propget] HRESULT BackgroundPalette( [out, retval] LONG *pBackgroundPalette );
         [propput] HRESULT Visible( [in] LONG Visible );
-        [propget] HRESULT Visible( [out] LONG *pVisible );
+        [propget] HRESULT Visible( [out, retval] LONG *pVisible );
         [propput] HRESULT Left( [in] LONG Left );
-        [propget] HRESULT Left( [out] LONG *pLeft );
+        [propget] HRESULT Left( [out, retval] LONG *pLeft );
         [propput] HRESULT Width( [in] LONG Width );
-        [propget] HRESULT Width( [out] LONG *pWidth );
+        [propget] HRESULT Width( [out, retval] LONG *pWidth );
         [propput] HRESULT Top( [in] LONG Top );
-        [propget] HRESULT Top( [out] LONG *pTop );
+        [propget] HRESULT Top( [out, retval] LONG *pTop );
         [propput] HRESULT Height( [in] LONG Height );
-        [propget] HRESULT Height( [out] LONG *pHeight );
+        [propget] HRESULT Height( [out, retval] LONG *pHeight );
         [propput] HRESULT Owner( [in] OAHWND Owner );
-        [propget] HRESULT Owner( [out] OAHWND *Owner );
+        [propget] HRESULT Owner( [out, retval] OAHWND *Owner );
         [propput] HRESULT MessageDrain( [in] OAHWND Drain );
-        [propget] HRESULT MessageDrain( [out] OAHWND *Drain );
-        [propget] HRESULT BorderColor( [out] LONG *Color );
+        [propget] HRESULT MessageDrain( [out, retval] OAHWND *Drain );
+        [propget] HRESULT BorderColor( [out, retval] LONG *Color );
         [propput] HRESULT BorderColor( [in] LONG Color );
-        [propget] HRESULT FullScreenMode( [out] LONG *FullScreenMode );
+        [propget] HRESULT FullScreenMode( [out, retval] LONG *FullScreenMode );
         [propput] HRESULT FullScreenMode( [in] LONG FullScreenMode );
         HRESULT SetWindowForeground( [in] LONG Focus );
         HRESULT NotifyOwnerMessage( [in] OAHWND hwnd, [in] LONG uMsg, [in] LONG_PTR wParam, [in] LONG_PTR lParam );
@@ -137,27 +138,27 @@
     ]
     interface IBasicVideo : IDispatch
     {
-        [propget] HRESULT AvgTimePerFrame( [out] REFTIME *pAvgTimePerFrame );
-        [propget] HRESULT BitRate( [out] LONG *pBitRate );
-        [propget] HRESULT BitErrorRate( [out] LONG *pBitErrorRate );
-        [propget] HRESULT VideoWidth( [out] LONG *pVideoWidth );
-        [propget] HRESULT VideoHeight( [out] LONG *pVideoHeight );
+        [propget] HRESULT AvgTimePerFrame( [out, retval] REFTIME *pAvgTimePerFrame );
+        [propget] HRESULT BitRate( [out, retval] LONG *pBitRate );
+        [propget] HRESULT BitErrorRate( [out, retval] LONG *pBitErrorRate );
+        [propget] HRESULT VideoWidth( [out, retval] LONG *pVideoWidth );
+        [propget] HRESULT VideoHeight( [out, retval] LONG *pVideoHeight );
         [propput] HRESULT SourceLeft( [in] LONG SourceLeft );
-        [propget] HRESULT SourceLeft( [out] LONG *pSourceLeft );
+        [propget] HRESULT SourceLeft( [out, retval] LONG *pSourceLeft );
         [propput] HRESULT SourceWidth( [in] LONG SourceWidth );
-        [propget] HRESULT SourceWidth( [out] LONG *pSourceWidth );
+        [propget] HRESULT SourceWidth( [out, retval] LONG *pSourceWidth );
         [propput] HRESULT SourceTop( [in] LONG SourceTop );
-        [propget] HRESULT SourceTop( [out] LONG *pSourceTop );
+        [propget] HRESULT SourceTop( [out, retval] LONG *pSourceTop );
         [propput] HRESULT SourceHeight( [in] LONG SourceHeight );
-        [propget] HRESULT SourceHeight( [out] LONG *pSourceHeight );
+        [propget] HRESULT SourceHeight( [out, retval] LONG *pSourceHeight );
         [propput] HRESULT DestinationLeft( [in] LONG DestinationLeft );
-        [propget] HRESULT DestinationLeft( [out] LONG *pDestinationLeft );
+        [propget] HRESULT DestinationLeft( [out, retval] LONG *pDestinationLeft );
         [propput] HRESULT DestinationWidth( [in] LONG DestinationWidth );
-        [propget] HRESULT DestinationWidth( [out] LONG *pDestinationWidth );
+        [propget] HRESULT DestinationWidth( [out, retval] LONG *pDestinationWidth );
         [propput] HRESULT DestinationTop( [in] LONG DestinationTop );
-        [propget] HRESULT DestinationTop( [out] LONG *pDestinationTop );
+        [propget] HRESULT DestinationTop( [out, retval] LONG *pDestinationTop );
         [propput] HRESULT DestinationHeight( [in] LONG DestinationHeight );
-        [propget] HRESULT DestinationHeight( [out] LONG *pDestinationHeight );
+        [propget] HRESULT DestinationHeight( [out, retval] LONG *pDestinationHeight );
         HRESULT SetSourcePosition( [in] LONG Left, [in] LONG Top, [in] LONG Width, [in] LONG Height );
         HRESULT GetSourcePosition( [out] LONG *pLeft, [out] LONG *pTop, [out] LONG *pWidth, [out] LONG *pHeight );
         HRESULT SetDefaultSourcePosition();
@@ -232,17 +233,17 @@
     ]
     interface IMediaPosition : IDispatch
     {
-        HRESULT get_Duration( [out] REFTIME *plength );
-        HRESULT put_CurrentPosition( [in] REFTIME llTime );
-        HRESULT get_CurrentPosition( [out] REFTIME *pllTime );
-        HRESULT get_StopTime( [out] REFTIME *pllTime );
-        HRESULT put_StopTime( [in] REFTIME llTime );
-        HRESULT get_PrerollTime( [out] REFTIME *pllTime );
-        HRESULT put_PrerollTime( [in] REFTIME llTime );
-        HRESULT put_Rate( [in] double dRate );
-        HRESULT get_Rate( [out] double *pdRate );
-        HRESULT CanSeekForward( [out] LONG *pCanSeekForward );
-        HRESULT CanSeekBackward( [out] LONG *pCanSeekBackward );
+        [propget] HRESULT Duration( [out, retval] REFTIME *plength );
+        [propput] HRESULT CurrentPosition( [in] REFTIME llTime );
+        [propget] HRESULT CurrentPosition( [out, retval] REFTIME *pllTime );
+        [propget] HRESULT StopTime( [out, retval] REFTIME *pllTime );
+        [propput] HRESULT StopTime( [in] REFTIME llTime );
+        [propget] HRESULT PrerollTime( [out, retval] REFTIME *pllTime );
+        [propput] HRESULT PrerollTime( [in] REFTIME llTime );
+        [propput] HRESULT Rate( [in] double dRate );
+        [propget] HRESULT Rate( [out, retval] double *pdRate );
+        HRESULT CanSeekForward( [out, retval] LONG *pCanSeekForward );
+        HRESULT CanSeekBackward( [out, retval] LONG *pCanSeekBackward );
     }
 
 } /* library QuartzTypeLib */
diff -u -r wine-1.4/include/msvcrt/stdio.h wine-1.4-zbar/include/msvcrt/stdio.h
--- wine-1.4/include/msvcrt/stdio.h	2012-03-07 17:11:48.000000000 +0100
+++ wine-1.4-zbar/include/msvcrt/stdio.h	2012-08-15 17:11:34.000000000 +0200
@@ -3,6 +3,7 @@
  *
  * Derived from the mingw header written by Colin Peters.
  * Modified for Wine use by Jon Griffiths and Francois Gouget.
+ * Modified in 2012 by Klaus Triendl <klaus@triendl.eu>
  * This file is in the public domain.
  */
 #ifndef __WINE_STDIO_H
@@ -167,6 +168,9 @@
 int    __cdecl setvbuf(FILE*,char*,int,size_t);
 int    __cdecl sprintf(char*,const char*,...);
 int    __cdecl sprintf_s(char*,size_t,const char*,...);
+// C99, not provided by MS;
+// note: I deliberately #define because the function might not be available for the linker
+#define snprintf _snprintf
 int    __cdecl sscanf(const char*,const char*,...);
 int    __cdecl sscanf_s(const char*,const char*,...);
 FILE*  __cdecl tmpfile(void);
diff -u -r wine-1.4/include/qedit.idl wine-1.4-zbar/include/qedit.idl
--- wine-1.4/include/qedit.idl	2012-03-07 17:11:48.000000000 +0100
+++ wine-1.4-zbar/include/qedit.idl	2012-08-15 17:11:47.000000000 +0200
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2008 Google (Lei Zhang)
+ * Modified in 2012 by Klaus Triendl <klaus@triendl.eu>
  *
  * This library is free software; you can redistribute it and/or
  * modify it under the terms of the GNU Lesser General Public
@@ -160,9 +161,32 @@
 };
 
 [
-    uuid(65BD0711-24D2-4ff7-9324-ED2E5D3ABAFA),
+    uuid(78530B68-61F9-11D2-8CAD-00A024580902),
+    version(1.0)
 ]
-coclass MediaDet
+library DexterLib
 {
-    [default] interface IMediaDet;
+	[
+		uuid(65BD0711-24D2-4ff7-9324-ED2E5D3ABAFA),
+	]
+	coclass MediaDet
+	{
+		[default] interface IMediaDet;
+	};
+
+	[
+		uuid(C1F400A0-3F08-11d3-9F0B-006008039E37)
+	]
+	coclass SampleGrabber
+	{
+		[default] interface ISampleGrabber;
+	};
+
+	[
+		uuid(C1F400A4-3F08-11d3-9F0B-006008039E37)
+	]
+	coclass NullRenderer
+	{
+		[default] interface IBaseFilter;
+	};
 };
diff -u -r wine-1.4/include/uuids.h wine-1.4-zbar/include/uuids.h
--- wine-1.4/include/uuids.h	2012-03-07 17:11:48.000000000 +0100
+++ wine-1.4-zbar/include/uuids.h	2012-08-15 17:12:07.000000000 +0200
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2002 Alexandre Julliard
+ * Modified in 2012 by Jarek Czekalski <jarekczek@poczta.onet.pl>
  *
  * This library is free software; you can redistribute it and/or
  * modify it under the terms of the GNU Lesser General Public
@@ -135,8 +136,9 @@
 OUR_GUID_ENTRY(CLSID_QTDec,                          0xfdfe9681, 0x74a3, 0x11d0, 0xaf, 0xa7, 0x00, 0xaa, 0x00, 0xb6, 0x7a, 0x42)
 OUR_GUID_ENTRY(CLSID_AVIDoc,                         0xd3588ab0, 0x0781, 0x11ce, 0xb0, 0x3a, 0x00, 0x20, 0xaf, 0x0b, 0xa7, 0x70)
 OUR_GUID_ENTRY(CLSID_AVIDocWriter,                   0xd3588ab1, 0x0781, 0x11ce, 0xb0, 0x3a, 0x00, 0x20, 0xaf, 0x0b, 0xa7, 0x70)
-OUR_GUID_ENTRY(CLSID_SampleGrabber,                  0xc1f400a0, 0x3f08, 0x11d3, 0x9f, 0x0b, 0x00, 0x60, 0x08, 0x03, 0x9e, 0x37)
-OUR_GUID_ENTRY(CLSID_NullRenderer,                   0xc1f400a4, 0x3f08, 0x11d3, 0x9f, 0x0b, 0x00, 0x60, 0x08, 0x03, 0x9e, 0x37)
+/* these 2 are defined in qedit.idl */
+//OUR_GUID_ENTRY(CLSID_SampleGrabber,                  0xc1f400a0, 0x3f08, 0x11d3, 0x9f, 0x0b, 0x00, 0x60, 0x08, 0x03, 0x9e, 0x37)
+//OUR_GUID_ENTRY(CLSID_NullRenderer,                   0xc1f400a4, 0x3f08, 0x11d3, 0x9f, 0x0b, 0x00, 0x60, 0x08, 0x03, 0x9e, 0x37)
 OUR_GUID_ENTRY(CLSID_VideoRenderer,                  0x70e102b0, 0x5556, 0x11ce, 0x97, 0xc0, 0x00, 0xaa, 0x00, 0x55, 0x59, 0x5a)
 OUR_GUID_ENTRY(CLSID_VideoRendererDefault,           0x6bc1cffa, 0x8fc1, 0x4261, 0xac, 0x22, 0xcf, 0xb4, 0xcc, 0x38, 0xdb, 0x50)
 OUR_GUID_ENTRY(CLSID_Colour,                         0x1643e180, 0x90f5, 0x11ce, 0x97, 0xd5, 0x00, 0xaa, 0x00, 0x55, 0x59, 0x5a)
diff -u -r wine-1.4/include/windef.h wine-1.4-zbar/include/windef.h
--- wine-1.4/include/windef.h	2012-03-07 17:11:48.000000000 +0100
+++ wine-1.4-zbar/include/windef.h	2012-08-15 17:12:19.000000000 +0200
@@ -2,6 +2,7 @@
  * Basic types definitions
  *
  * Copyright 1996 Alexandre Julliard
+ * Modified in 2012 by Klaus Triendl <klaus@triendl.eu>
  *
  * This library is free software; you can redistribute it and/or
  * modify it under the terms of the GNU Lesser General Public
@@ -213,7 +214,9 @@
 typedef unsigned int    UINT,       *PUINT;
 typedef float           FLOAT,      *PFLOAT;
 typedef char                        *PSZ;
-#ifdef _MSC_VER
+// kj: this has been introduced by Michael Stefaniuc in 2006 to make a LONG the same-sized type on 32 and 64 bit,
+// but we need long when compiling zbar with mingw
+#if defined(__MINGW32__) || defined(__MINGW64__) || defined(_MSC_VER)
 typedef long                                   *LPLONG;
 typedef unsigned long   DWORD,      *PDWORD,   *LPDWORD;
 typedef unsigned long   ULONG,      *PULONG;
diff -u -r wine-1.4/include/winnt.h wine-1.4-zbar/include/winnt.h
--- wine-1.4/include/winnt.h	2012-03-07 17:11:48.000000000 +0100
+++ wine-1.4-zbar/include/winnt.h	2012-08-15 17:12:56.000000000 +0200
@@ -2,6 +2,7 @@
  * Win32 definitions for Windows NT
  *
  * Copyright 1996 Alexandre Julliard
+ * Modified in 2012 by Klaus Triendl <klaus@triendl.eu>
  *
  * This library is free software; you can redistribute it and/or
  * modify it under the terms of the GNU Lesser General Public
@@ -392,7 +393,9 @@
 typedef BYTE            BOOLEAN,    *PBOOLEAN;
 typedef char            CHAR,       *PCHAR;
 typedef short           SHORT,      *PSHORT;
-#ifdef _MSC_VER
+// kj: this has been introduced by Michael Stefaniuc in 2006 to make a LONG the same-sized type on 32 and 64 bit,
+// but we need long when compiling zbar with mingw
+#if defined(__MINGW32__) || defined(__MINGW64__) || defined(_MSC_VER)
 typedef long            LONG,       *PLONG;
 #else
 typedef int             LONG,       *PLONG;
